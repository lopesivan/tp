    $ perlcc hello              # Compiles into executable 'a.out'
    $ perlcc -o hello hello.pl  # Compiles into executable 'hello'

    $ perlcc -O file            # Compiles using the optimised C backend
    $ perlcc -B file            # Compiles using the bytecode backend

    $ perlcc -c file            # Creates a C file, 'file.c'
    $ perlcc -S -o hello file   # Creates a C file, 'file.c',
                                # then compiles it to executable 'hello'
    $ perlcc -c out.c file      # Creates a C file, 'out.c' from 'file'

    $ perlcc -e 'print q//'     # Compiles a one-liner into 'a.out'
    $ perlcc -c -e 'print q//'  # Creates a C file 'a.out.c'

    $ perlcc -I /foo hello      # extra headers (notice the space after -I)
    $ perlcc -L /foo hello      # extra libraries (notice the space after -L)

    $ perlcc -r hello           # compiles 'hello' into 'a.out', runs 'a.out'.
    $ perlcc -r hello a b c     # compiles 'hello' into 'a.out', runs 'a.out'.
                                # with arguments 'a b c'

    $ perlcc hello -log c       # compiles 'hello' into 'a.out' logs compile
                                # log into 'c'.


    %prompt  perlcc a.p        # compiles into executable 'a'

    %prompt  perlcc A.pm       # compile into 'A.so'

    %prompt  perlcc a.p -o execute  # compiles 'a.p' into 'execute'.

    %prompt  perlcc a.p -o execute -run # compiles 'a.p' into execute, runs on
                                        # the fly

    %prompt  perlcc a.p -o execute -run -argv 'arg1 arg2 arg3' 
                                        # compiles into execute, runs with 
                                        # arg1 arg2 arg3 as @ARGV

    %prompt perlcc a.p b.p c.p -regex 's/\.p/\.exe'
                                        # compiles into 'a.exe','b.exe','c.exe'.

    %prompt perlcc a.p -log compilelog  # compiles into 'a', saves compilation
                                        # info into compilelog, as well
                                        # as mirroring to screen

    %prompt perlcc a.p -log compilelog -verbose cdf 
                                        # compiles into 'a', saves compilation
                                        # info into compilelog, being silent
                                        # on screen.

    %prompt perlcc a.p -C a.c -gen      # generates C code (into a.c) and 
                                        # stops without compile.

    %prompt perlcc a.p -L ../lib a.c 
                                        # Compiles with the perl libraries 
                                        # inside ../lib included.


Perl module install under Ubuntu
By David Yin on April 5, 2007 4:41 PM | 2 Comments | No TrackBacks

How to find perl module and install it under Ubuntu?
1) You have to find the package of this module.
For example, I want to install GEO::IPfree module for enable IPfree plugin in Awstats.

    sudo apt-cache search perl geo::ipfree

2) It will return the package name as below:

    libgeo-ipfree-perl

3) Now I can install this module by following command:

    sudo apt-get install libgeo-ipfree-perl

Done.
