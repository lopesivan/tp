// compilar com gcc triangulos.c -o triangulos -lglut

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#include <GL/glut.h>

/* reshape: chamada toda vez que a janela eh redimensionada,
   estabelece a matriz de projecao (camera) */
void
reshape (int w, int h)
{
    glViewport (0, 0, w, h);
    glMatrixMode (GL_PROJECTION);
    glLoadIdentity ();
    glOrtho (0.0, w, h, 0, -10, 10);
    //glOrtho(0.0,500.0,500.0,0,-10,10);
}

/* display: chamada toda vez que a janela precisa ser redesenhada */
void
display ()
{
    int i, j;

    glMatrixMode (GL_MODELVIEW);
    glLoadIdentity ();

    glClear (GL_COLOR_BUFFER_BIT);

    for (i = 0; i < 5; i++)
        for (j = 0; j < 3; j++)
        {
            glPushMatrix ();
            glTranslatef (i * 100.0f, j * 150.0f, 0.0f);
            glBegin (GL_TRIANGLES);
            glColor3f (1.0, 1.0, 0.0);
            glVertex2i (50, 50);
            glColor3f (1.0, 0.0, 0.0);
            glVertex2i (100, 60);
            glColor3f (0.0, 0.0, 1.0);
            glVertex2i (70, 200);
            glEnd ();
            glPopMatrix ();
        }

    glEnd ();


    glutSwapBuffers ();
}

int
main (int argc, char **argv)
{

    glutInit (&argc, argv);
    glutInitDisplayMode (GLUT_RGBA | GLUT_DOUBLE);
    glutInitWindowSize (600, 600);
    glutCreateWindow ("Programa 1");

    glClearColor (0.0, 0.0, 0.0, 0.0);
    glShadeModel (GL_SMOOTH);
    reshape (600, 600);

    glutReshapeFunc (&reshape);
    glutDisplayFunc (&display);

    glutMainLoop ();

    return 0;
}
