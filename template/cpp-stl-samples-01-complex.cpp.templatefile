#include <iostream>				 //cout
#include <algorithm>			 //transform ()
#include <complex>
#include <vector>

using namespace std;

complex<int> func (int real, int imag)
{
    return complex<int> (real, imag);
}

int main ()
{
    vector<int> real;			 //parte real
    vector<int> imag;			 //parte imaginaria

    real.push_back (1);
    real.push_back (3);
    real.push_back (152);

    imag.push_back (5);
    imag.push_back (8);
    imag.push_back (12);

    //reserva 3 posicoes
    vector< complex<int> > complexo (3);

    //origem
    transform (real.begin (), real.end (),
               imag.begin (),			 //origem do segund
               complexo.begin (),		 //destino
               func					 //funo
              );

    vector< complex<int> >::iterator it;

    for (it = complexo.begin (); it != complexo.end (); it++)
    {
        cout << *it << endl;
    }

    return 0;
}
